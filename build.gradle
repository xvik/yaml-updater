plugins {
    id 'ru.vyarus.github-info' version '2.0.0' apply false
    id 'ru.vyarus.quality' version '6.0.1' apply false
    id 'com.github.spotbugs' version '6.2.7' apply false

    id 'base'
    id 'jacoco'
    id 'ru.vyarus.java-lib' version '3.0.0'
    id 'net.researchgate.release' version '3.1.0'
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
    id 'com.github.ben-manes.versions' version '0.52.0'
}

wrapper {
    gradleVersion = '8.14.3'
}

javaLib {
    // aggregated test and coverage reports
    aggregateReports()
}

allprojects {
    repositories { mavenLocal(); mavenCentral() }

    group = 'ru.vyarus'
}

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'jacoco'
    apply plugin: 'project-report'
    apply plugin: 'signing'
    apply plugin: 'ru.vyarus.java-lib'
    apply plugin: 'ru.vyarus.quality'
    apply plugin: 'ru.vyarus.github-info'
    apply plugin: 'com.github.ben-manes.versions'

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
    }

    dependencies {
        compileOnly 'com.github.spotbugs:spotbugs-annotations:4.8.6'

        testImplementation 'org.spockframework:spock-core:2.4-M6-groovy-4.0'
    }

    github {
        user = 'xvik'
        license = 'MIT'
    }

    maven.pom {
        developers {
            developer {
                id = 'xvik'
                name = 'Vyacheslav Rusakov'
                email = 'vyarus@gmail.com'
            }
        }
    }

    javaLib {
        // java 9 auto module name
        autoModuleName = "$group.${project.name.replace('-', '.')}"
        // don't publish gradle metadata artifact
        withoutGradleMetadata()
    }

    test {
        useJUnitPlatform()
        testLogging {
            events 'skipped', 'failed'
            exceptionFormat = 'full'
        }
        maxHeapSize = '512m'
    }

    dependencyUpdates.revision = 'release'
}

// dependency on all subprojects required for release validation
check.dependsOn subprojects.check

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl = uri("https://ossrh-staging-api.central.sonatype.com/service/local/")
            snapshotRepositoryUrl = uri("https://central.sonatype.com/repository/maven-snapshots/")
            username = findProperty('sonatypeUser')
            password = findProperty('sonatypePassword')
        }
    }
}

// skip signing for jitpack (snapshots)
tasks.withType(Sign).configureEach { onlyIf { !System.getenv('JITPACK') } }

// Required signing properties for release: signing.keyId, signing.password and signing.secretKeyRingFile
// (https://docs.gradle.org/current/userguide/signing_plugin.html#sec:signatory_credentials)

release.git.requireBranch.set('master')

// release manages only root project (subprojects will be checked and released implicitly)
afterReleaseBuild {
    dependsOn subprojects.collect {":$it.name:publishToSonatype" }
    dependsOn 'closeAndReleaseSonatypeStagingRepository'
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

